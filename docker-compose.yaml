services:
  app:
    build: ./app
    image: myapp:latest

  app1:
    image: myapp:latest
    environment:
      - APP_NAME=app1
    ports:
      - "3000:3000"

  app2:
    image: myapp:latest
    environment:
      - APP_NAME=app2
    ports:
      - "3001:3000"

  app3:
    image: myapp:latest
    environment:
      - APP_NAME=app3
    ports:
      - "3002:3000"

  app4:
    image: myapp:latest
    environment:
      - APP_NAME=app4
    ports:
      - "3003:3000"

  app5:
    image: myapp:latest
    environment:
      - APP_NAME=app5
    ports:
      - "3004:3000"

  apisix:
    image: apache/apisix:3.12.0-debian
    container_name: apisix
    environment:
      APISIX_STAND_ALONE: true
    ports:
      - "8000:9080"
    volumes:
      - ./gateways/apisix/apisix.yaml:/usr/local/apisix/conf/apisix.yaml
      - ./gateways/apisix/apisix.yaml:/usr/local/apisix/conf/config.yaml

  kong:
    image: kong:3.9.0
    container_name: kong
    ports:
      - "8000:8000"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/kong/kong.yaml"
    volumes:
      - ./gateways/kong/kong.yaml:/kong/kong.yaml

  krakend:
    image: krakend:2.10.0
    container_name: krakend
    ports:
      - "8000:8080"
    volumes:
      - ./gateways/krakend/krakend.json:/etc/krakend/krakend.json

  tyk:
    image: tykio/tyk-gateway:v5.8.1
    container_name: tyk
    # platform: linux/amd64     # Unfortunately, Tyk image does not support ARM64 architecture
    ports:
      - "8000:8080"
    depends_on:
      - tyk-redis
    volumes:
      - ./gateways/tyk/tyk.conf:/etc/tyk/tyk.conf
      - ./gateways/tyk/apps/:/opt/tyk-gateway/apps/

  tyk-redis:
    image: redis:8.0.2-alpine
    container_name: tyk-redis
    ports:
      - "6379:6379"

  yarp:
    image: mcr.microsoft.com/dotnet/nightly/yarp:2.3-preview
    container_name: yarp
    ports:
      - "8000:5000"
    volumes:
      - ./gateways/yarp/yarp.config:/etc/yarp.config
  
  express-gateway:
    image: express-gateway:1.16.11
    container_name: express-gateway
    ports:
      - "8000:8080"
    volumes:
      - ./gateways/express-gateway/gateway.config.yml:/var/lib/eg/gateway.config.yml

  ocelot:
    build: ./gateways/ocelot    # Official Ocelot image does not exist
    container_name: ocelot
    ports:
      - "8000:8080"
    volumes:
      - ./gateways/ocelot/ocelot.json:/app/ocelot.json

  
  nginx:
    image: nginx:1.28.0
    container_name: nginx
    ports:
      - "8000:8080"
    volumes:
      - ./gateways/nginx/nginx.conf:/etc/nginx/nginx.conf:ro